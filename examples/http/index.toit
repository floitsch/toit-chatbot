// Copyright (C) 2023 Florian Loitsch.
// Use of this source code is governed by a Zero-Clause BSD license that can
// be found in the EXAMPLES_LICENSE file.

/**
Index page.

Generated by OpenAI with the following prompt:
```
Write a small html page that implements a chat bot application.
The page should look good.
Whenever the user enters a message (submitting with Enter), the message should be sent to the server (endpoint `/new_message` as json with key "message"). The response is another JSON (key "response") containing pure text. This text should then be shown.
Don't forget to escape the returned text and replace `\n` with visible new lines.
```

If you don't like the style (and it's not great), just run the same query.
*/
INDEX_PAGE ::= """
<!DOCTYPE html>
<html>
  <head>
    <title>Chat Bot Application</title>
    <style>
      /* Add CSS styles for the chat window and message container */
      .chat-window {
        width: 100%;
        height: 500px;
        background-color: #f1f1f1;
        overflow: auto;
      }
      .message-container {
        background-color: #fff;
        padding: 10px;
        margin: 10px;
        border-radius: 5px;
      }
    </style>
  </head>
  <body>
    <h1>Chat Bot Application</h1>
    <div class="chat-window">
      <div id="message-container"></div>
    </div>
    <form onsubmit="sendMessage(); return false;">
      <input type="text" id="message-input" placeholder="Type your message here and hit Enter" style="width: 80%; padding: 10px; font-size: 16px;" autocomplete="off" autofocus>
      <button type="submit" style="width: 18%; padding: 10px; font-size: 16px;">Send</button>
    </form>
    <script>
      function sendMessage() {
        const messageInput = document.getElementById("message-input");
        const message = messageInput.value;
        messageInput.value = "";
        const messageContainer = document.getElementById("message-container");
        const messageElement = document.createElement("div");
        messageElement.innerHTML = `<div class="message-container"><strong>You:</strong> \${escapeHtml(message)}</div>`;
        messageContainer.appendChild(messageElement);
        fetch("/new_message", {
          method: "POST",
          headers: {
            "Content-Type": "application/json"
          },
          body: JSON.stringify({
            message: message
          })
        })
        .then(response => response.json())
        .then(data => {
          const response = data.response;
          const responseElement = document.createElement("div");
          responseElement.innerHTML = `<div class="message-container"><strong>Bot:</strong> \${escapeHtml(response).replace(/\\n/g, "<br/>")}</div>`;
          messageContainer.appendChild(responseElement);
        });
      }
      function escapeHtml(unsafe) {
        return unsafe.replace(/&/g, "&amp;")
                     .replace(/</g, "&lt;")
                     .replace(/>/g, "&gt;")
                     .replace(/"/g, "&quot;")
                     .replace(/'/g, "&#039;");
      }
    </script>
  </body>
</html>
"""
